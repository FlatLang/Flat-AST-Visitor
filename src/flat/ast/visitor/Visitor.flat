package flat/ast/visitor

import flat/ast
import flat/eventstream
import flat/log

class {
  static Logger log = Logger(Visitor.class)

  public visit(
    EventStream nodeStream,
    VisitorBase nodeVisitor
  ) =>
    EventStream(true).on("start", (data, stream) => {
      nodeStream.on<Node>("data", (node) => {
        Visitor.log.traceFunc({"Received data from Node EventStream: #{node}"})

        nodeVisitor.visit(node)
      })

      nodeStream.on<String>("error", (error) => {
        Visitor.log.traceFunc({"Received error from Node EventStream: #{error}"})
        stream.emit("error", error)
      })

      nodeStream.on("close", {
        Visitor.log.traceFunc({"Node EventStream closed"})
        stream.emit("close")
      })
    })
}
